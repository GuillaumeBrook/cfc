/**
 * This class represent a "ride", which is a sequence of coordinate
 */
var Ride = (function() {
	'use strict';
	
	Ride.RIDE_TYPE = {
		TRAIN: "train",
		CAR: "car",
		PLANE: "plane",
		SUBWAY: "subway",
		PUBLIC_TRANS: "public transport",
		WALK: "walking",
		UNDEFINED: "undefined"
	};

	Ride.val = 5;

	/*
		Notre calculateur utilise les émissions suivantes par mode, qui sont au 27 septembre 2013, par personne :
	- en train sur le réseau Transilien : 6,2g / km
	- en RER : 6,2g / km
	- en tramway : 3,1g / km
	- en métro : 4g / km
	- en bus : 103.3g / km
	- en voiture : 161g / km 
	http://www.transilien.com/static/bilan-carbone-aide
*/
	
	Ride.EMISSION_FACTOR = {
	    "car"      : 255.97,
	    "motorbike": 144.69,
	    "plane"    : 388.51,
	    "train"    : 37.49,
	    "subway"   : 50.00,
	    "coach"    : 39.97,
	    "bus"      : 88.37,
	    "bike"     : 0.,
	    "walking"  : 0.,
	    'undefined': 0.
	};

	function Ride() {
		this.coordinates = [];
	}

	Ride.prototype.addCoordinate = function(coordinate) {
		this.coordinates.push(coordinate);
	};
	
	Ride.prototype.getLength = function() {
		return this.coordinates.length;
	};

	/**
	 * Set the following attributes :
	 *  - averageSpeed	: Average speed in km/h
	 *  - averageAcc 	: Average acceleration in m/s^2
	 *  - distance		: Total distance in km
	 *  - maxSpeed		: Max speed in km/h
	 *  - type			: Type of vehicle used
	 *  - emission		: Carbon footprint in kg eq. CO2
	 */
	Ride.prototype.computeMetrics = function() {
		var maxSpeed = 0.;
		var speedSum = 0.;
		var accSum = 0.;
		var distSum = 0.;
		
		for (var i = 1; i < this.coordinates.length; i++) {
			var t_1 = this.coordinates[i - 1];
			var t = this.coordinates[i];

			var speed = t_1.speed(t);
			
			// aggregate speeds
			speedSum += speed;
			
			// max speed
			if (speed > maxSpeed) {
				maxSpeed = speed;
			}
			
			// aggregate accelerations
			accSum += t_1.acceleration(t);
			
			// aggregate distances
			distSum += t_1.distance(t);
		}
		
		/*
		 * Set attributes
		 */
		this.distance = distSum;
		this.maxSpeed = maxSpeed;
		this.averageSpeed = speedSum / (this.coordinates.length - 1);
		this.averageAcc = accSum / (this.coordinates.length - 1);

		console.log("Somme des distances: " +distSum);
		console.log("Vitesse max: "+maxSpeed);
		//console.log("Vit. moy: "+averageSpeed);
		//console.log("Accel. moy: "+averageAcc);
		
		/*
		 * We obviously lost a lot of car movement
		 * but that's just a draft
		 */
		/** Base **/
		/*
		if(this.averageSpeed > 150 || this.maxSpeed > 200) {
			this.type = Ride.RIDE_TYPE.TRAIN;
		}
		else if(this.averageSpeed > 30 || this.maxSpeed > 60 || this.averageAcc > 0.04) {
			this.type = Ride.RIDE_TYPE.CAR;
		}
		else if(this.averageSpeed <= 5 && this.maxSpeed < 8) {
			this.type = Ride.RIDE_TYPE.WALK;
		}
		else {
			this.type = Ride.RIDE_TYPE.UNDEFINED;
		}
		*/
		if (this.averageSpeed > 310) {
			this.type = Ride.RIDE_TYPE.PLANE; //GPS desactived in plane ?
		} 
		else if(this.averageSpeed > 150 || this.maxSpeed > 200) {
			this.type = Ride.RIDE_TYPE.TRAIN;
		}
		else if(this.averageSpeed > 30) {
			if (this.maxSpeed > 80 || this.averageAcc > 0.04) {
				this.type = Ride.RIDE_TYPE.CAR;
			} else {
				this.type = Ride.RIDE_TYPE.SUBWAY;
			}
		}
		else if(this.averageSpeed <= 15 && this.maxSpeed < 10) {
			this.type = Ride.RIDE_TYPE.WALK; //and bike
		}
		else {
			this.type = Ride.RIDE_TYPE.UNDEFINED;
		}
		var nPassengers = 1; //XXX FIXED FOR NOW
		this.emission = (this.distance * Ride.EMISSION_FACTOR[this.type] / nPassengers) / 1000;
		
	};

	return Ride;

}());

module.exports = Ride;